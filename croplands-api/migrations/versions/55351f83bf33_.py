"""empty message

Revision ID: 55351f83bf33
Revises: 29a55bf8c8a9
Create Date: 2015-04-16 13:57:01.105694

"""

# revision identifiers, used by Alembic.
revision = '55351f83bf33'
down_revision = '29a55bf8c8a9'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_classification_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_captured', sa.DateTime(), nullable=True),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('comments', sa.String(), nullable=True),
    sa.Column('bearing', sa.Integer(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('corner_ne_lat', sa.Float(), nullable=True),
    sa.Column('corner_ne_lon', sa.Float(), nullable=True),
    sa.Column('corner_sw_lat', sa.Float(), nullable=True),
    sa.Column('corner_sw_lon', sa.Float(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('copyright', sa.String(), nullable=True),
    sa.Column('image_type', sa.String(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('date_uploaded', sa.DateTime(), nullable=True),
    sa.Column('date_acquired', sa.DateTime(), nullable=False),
    sa.Column('date_acquired_earliest', sa.DateTime(), nullable=True),
    sa.Column('date_acquired_latest', sa.DateTime(), nullable=True),
    sa.Column('classifications_count', sa.Integer(), nullable=True),
    sa.Column('classifications_majority_agreement', sa.Integer(), nullable=True),
    sa.Column('classifications_majority_class', sa.Integer(), nullable=True),
    sa.Column('flagged', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_image_classifications_count'), 'image', ['classifications_count'], unique=False)
    op.create_index(op.f('ix_image_classifications_majority_agreement'), 'image', ['classifications_majority_agreement'], unique=False)
    op.create_index(op.f('ix_image_classifications_majority_class'), 'image', ['classifications_majority_class'], unique=False)
    op.create_index(op.f('ix_image_date_acquired'), 'image', ['date_acquired'], unique=False)
    op.create_index(op.f('ix_image_image_type'), 'image', ['image_type'], unique=False)
    op.create_index(op.f('ix_image_lat'), 'image', ['lat'], unique=False)
    op.create_index(op.f('ix_image_location_id'), 'image', ['location_id'], unique=False)
    op.create_index(op.f('ix_image_lon'), 'image', ['lon'], unique=False)
    op.create_table('image_classification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('classification', sa.Integer(), nullable=False),
    sa.Column('date_classified', sa.DateTime(), nullable=True),
    sa.Column('image', sa.Integer(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('ip', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['image'], ['image.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('tile')
    # op.drop_table('tile_user')
    # op.drop_table('tile_classification')
    op.drop_table('photo')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photo',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_taken', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('comments', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_uploaded', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('flagged', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['location_id'], [u'location.id'], name=u'photo_location_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], name=u'photo_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'photo_pkey')
    )
    op.create_table('tile_classification',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('classification', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_classified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tile', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tile'], [u'tile.id'], name=u'tile_classification_tile_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'user.id'], name=u'tile_classification_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'tile_classification_pkey')
    )
    op.create_table('tile_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('date_captured', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'tile_user_pkey')
    )
    op.create_table('tile',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('center_lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('center_lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('corner_ne_lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('corner_ne_lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('corner_sw_lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('corner_sw_lon', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('copyright', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('product_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_acquired', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_acquired_earliest', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_acquired_latest', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('feature_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('zoom', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('x', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('y', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('classifications_count', sa.INTEGER(), server_default=sa.text(u'0'), autoincrement=False, nullable=True),
    sa.Column('classifications_majority_agreement', sa.INTEGER(), server_default=sa.text(u'0'), autoincrement=False, nullable=True),
    sa.Column('classifications_majority_class', sa.INTEGER(), server_default=sa.text(u'0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'tile_pkey')
    )
    op.drop_table('image_classification')
    op.drop_index(op.f('ix_image_lon'), table_name='image')
    op.drop_index(op.f('ix_image_location_id'), table_name='image')
    op.drop_index(op.f('ix_image_lat'), table_name='image')
    op.drop_index(op.f('ix_image_image_type'), table_name='image')
    op.drop_index(op.f('ix_image_date_acquired'), table_name='image')
    op.drop_index(op.f('ix_image_classifications_majority_class'), table_name='image')
    op.drop_index(op.f('ix_image_classifications_majority_agreement'), table_name='image')
    op.drop_index(op.f('ix_image_classifications_count'), table_name='image')
    op.drop_table('image')
    op.drop_table('image_classification_user')
    ### end Alembic commands ###
